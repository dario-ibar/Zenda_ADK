En agents va la logica de cada agente, en un archivo .py
En prompts van las instrucciones a cada agente, editable facilmente, en un archivo .md
En core se mapea la logica con las intrucciones, con el archivo core/utils/prompt_utils.py


Archivos .py (ej. dt_agent.py, zenda_agent.py, qa_agent.py en la carpeta agents/):
Objetivo: Contienen la lógica de programación del agente. Es el "cómo" el agente opera. Aquí se define la clase del agente (LlmAgent), sus métodos (ej., process_client_input), cómo interactúa con otras herramientas, cómo gestiona el estado (SessionContext), y las reglas de su comportamiento interno.
Funcionalidad: Estos archivos son ejecutables por Python.

Archivos .md (ej. dt_system_prompt.md, zenda_system_prompt.md, qa_system_prompt.md en la carpeta prompts/):
Objetivo: Contienen las instrucciones directas que se le dan al Modelo de Lenguaje Grande (LLM) que "vive" dentro del agente. Es el "qué" el agente debe pensar o cómo debe actuar. Aquí se define su rol, su misión, sus principios, sus guardrails y sus pautas de intervención.
Funcionalidad: Estos archivos no son ejecutables por Python directamente. Son leídos por el código Python de los agentes utilizando la función de utilidad read_prompt_file (que creamos en core/utils/prompt_utils.py). El contenido de estos archivos .md es lo que se envía al LLM como parte de su "System Prompt" o instrucciones iniciales.